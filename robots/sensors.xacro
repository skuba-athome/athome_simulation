<?xml version="1.0"?>

<robot name="lumyai_neli" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <joint name="hokuyo_joint" type="fixed">
        <axis xyz="0 1 0"/>
        <origin xyz="0 0 0.05" rpy="0 0 0"/>
        <parent link="laser_Link"/>
        <child link="hokuyo_link"/>
    </joint>

    <link name="hokuyo_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.1 0.1 0.1"/>
            </geometry>
        </collision>

        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <!-- hokuyo -->
    <gazebo reference="hokuyo_link">
        <sensor type="ray" name="hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>30</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.570796</min_angle>
                        <max_angle>1.570796</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.10</min>
                    <max>30.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                        <!-- Noise parameters based on published spec for Hokuyo laser
                            achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                            stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                            reading. -->
                    <mean>0.0</mean>
                    <stddev>0.005</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>/laser/scan</topicName>
                <frameName>laser_Link</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="camera_link">
        <sensor type="depth" name="openni_camera_camera">       
            <always_on>1</always_on>
            <visualize>true</visualize>             
            <camera>
                <horizontal_fov>1.047</horizontal_fov>  
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <depth_camera>

                </depth_camera>
                <clip>
                    <near>0.1</near>
                    <far>100</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>10.0</updateRate>
                <cameraName>camera</cameraName>
                <frameName>camera_link</frameName>                   
                <imageTopicName>rgb/image_raw</imageTopicName>
                <depthImageTopicName>depth/image_raw</depthImageTopicName>
                <pointCloudTopicName>depth/points</pointCloudTopicName>
                <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>              
                <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>            
                <pointCloudCutoff>0.4</pointCloudCutoff>                
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
                <CxPrime>0.0</CxPrime>
                <Cx>0.0</Cx>
                <Cy>0.0</Cy>
                <focalLength>0.0</focalLength>
            </plugin>
        </sensor>
    </gazebo>

</robot>
